name: PR Test

on:
  push:
    branches: [ main ]
    paths:
      - "python/sglang/**"
      - "test/**"
      - "docs/**"
  pull_request:
    branches: [ main ]
    paths:
      - "python/sglang/**"
      - "test/**"
      - "docs/**"
  workflow_dispatch:
    inputs:
      version:
        description: "FlashInfer version"
        required: true
        type: choice
        default: 'release'
        options:
          - 'release'
          - 'nightly'

concurrency:
  group: pr-test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-test-frontend:
    if: (github.repository == 'sgl-project/sglang' || github.event_name == 'pull_request') && github.event.pull_request.draft == false && (contains(github.event.pull_request.changed_files, 'python/sglang') || contains(github.event.pull_request.changed_files, 'test'))
    runs-on: 1-gpu-runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        env:
          FLASHINFER_REPO: ${{ inputs.version == 'nightly' && 'https://flashinfer.ai/whl/nightly/cu124/torch2.5/flashinfer' || 'https://flashinfer.ai/whl/cu124/torch2.5/flashinfer' }}
        run: |
          bash scripts/ci_install_dependency.sh

      - name: Run test
        timeout-minutes: 10
        run: |
          cd test/lang
          python3 run_suite.py --suite per-commit

  unit-test-backend-1-gpu:
    if: (github.repository == 'sgl-project/sglang' || github.event_name == 'pull_request') && github.event.pull_request.draft == false && (contains(github.event.pull_request.changed_files, 'python/sglang') || contains(github.event.pull_request.changed_files, 'test'))
    runs-on: 1-gpu-runner
    strategy:
      fail-fast: false
      matrix:
        range: [0-6, 6-15, 15-22, 22-32, 32-40, 40-100]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        env:
          FLASHINFER_REPO: ${{ inputs.version == 'nightly' && 'https://flashinfer.ai/whl/nightly/cu124/torch2.5/flashinfer' || 'https://flashinfer.ai/whl/cu124/torch2.5/flashinfer' }}
        run: |
          bash scripts/ci_install_dependency.sh

      - name: Run test
        timeout-minutes: 25
        run: |
          RANGE=${{ matrix.range }}
          range_begin=${RANGE%-*}
          range_end=${RANGE#*-}

          cd test/srt
          python3 run_suite.py --suite per-commit --range-begin ${range_begin} --range-end ${range_end}

  unit-test-backend-2-gpu:
    if: (github.repository == 'sgl-project/sglang' || github.event_name == 'pull_request') && github.event.pull_request.draft == false && (contains(github.event.pull_request.changed_files, 'python/sglang') || contains(github.event.pull_request.changed_files, 'test'))
    runs-on: 2-gpu-runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        env:
          FLASHINFER_REPO: ${{ inputs.version == 'nightly' && 'https://flashinfer.ai/whl/nightly/cu124/torch2.5/flashinfer' || 'https://flashinfer.ai/whl/cu124/torch2.5/flashinfer' }}
        run: |
          bash scripts/ci_install_dependency.sh

      - name: Test data parallelism (DP=2)
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 test_data_parallelism.py

      - name: Test data parallelism attention (DP=2)
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 test_dp_attention.py

      - name: Test update weights from distributed
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 test_update_weights_from_distributed.py

      - name: Test expert parallelism (EP=2)
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 test_moe_ep.py

  doc-test:
    if: contains(github.event.pull_request.changed_files, 'docs/**')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          pip install -r docs/requirements.txt

      - name: Execute notebooks
        timeout-minutes: 40
        run: |
          cd docs
          make clean
          make compile

  finish:
    needs:
      - unit-test-frontend
      - unit-test-backend-1-gpu
      - unit-test-backend-2-gpu
      - doc-test
    runs-on: ubuntu-latest
    if: >
      always() &&
      (
        (
          needs.doc-test.result == 'success' &&
          !contains(github.event.pull_request.changed_files, 'python/sglang/**') &&
          !contains(github.event.pull_request.changed_files, 'test/**')
        ) ||
        (
          needs.unit-test-frontend.result == 'success' &&
          needs.unit-test-backend-1-gpu.result == 'success' &&
          needs.unit-test-backend-2-gpu.result == 'success' &&
          !contains(github.event.pull_request.changed_files, 'docs/**')
        ) ||
        (
          needs.doc-test.result == 'success' &&
          needs.unit-test-frontend.result == 'success' &&
          needs.unit-test-backend-1-gpu.result == 'success' &&
          needs.unit-test-backend-2-gpu.result == 'success'
        )
      )
    steps:
      - name: Finish
        run: echo "All relevant tests completed successfully."
