name: E2E Test

on:
  push:
    branches: [ main ]
    paths:
      - "python/sglang/**"
      - "test/**"
  pull_request:
    branches: [ main ]
    paths:
      - "python/sglang/**"
      - "test/**"
  workflow_dispatch:

concurrency:
  group: e2e-test-${{ github.ref }}
  cancel-in-progress: true

jobs:
  one-gpu:
    if: github.repository == 'sgl-project/sglang' || github.event_name == 'pull_request'
    runs-on: 1-gpu-runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -e "python[all]"
          pip install flashinfer -i https://flashinfer.ai/whl/cu121/torch2.4/ --force-reinstall

      - name: Benchmark Serving Throughput
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 -m unittest test_serving_throughput.TestServingThroughput.test_default

      - name: Benchmark Serving Latency
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 -m unittest test_serving_latency.TestServingLatency.test_default

      - name: Benchmark Serving Throughput (w/o RadixAttention)
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 -m unittest test_serving_throughput.TestServingThroughput.test_default_without_radix_cache

      - name: Benchmark Serving Throughput (w/o ChunkedPrefill)
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 -m unittest test_serving_throughput.TestServingThroughput.test_default_without_chunked_prefill

  two-gpu:
    if: github.repository == 'sgl-project/sglang' || github.event_name == 'pull_request'
    runs-on: 2-gpu-runner

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -e "python[all]"
          pip install flashinfer -i https://flashinfer.ai/whl/cu121/torch2.4/ --force-reinstall

      - name: Benchmark Serving Throughput (TP=2)
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 -m unittest test_moe_serving_throughput.TestServingThroughput.test_default

      - name: Benchmark Serving Latency (TP=2)
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 -m unittest test_moe_serving_latency.TestServingLatency.test_default

      - name: Benchmark Serving Throughput (w/o RadixAttention) (TP=2)
        timeout-minutes: 10
        run: |
          cd test/srt
          python3 -m unittest test_moe_serving_throughput.TestServingThroughput.test_default_without_radix_cache

  finish:
    needs: [one-gpu, two-gpu]
    runs-on: ubuntu-latest
    steps:
      - name: Finish
        run: echo "This is an empty step to ensure that all jobs are completed."
