name: Release SGLang Kernel to PyPI

on:
  push:
    branches:
      - main
    paths:
      - sgl-kernel/src/sgl-kernel/version.py
  workflow_dispatch:

concurrency:
  group: release-pypi-kernel-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-wheels:
    if: github.repository == 'sgl-project/sglang'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
        cuda-version: ['12.4']

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Build wheels for Python ${{ matrix.python-version }} and CUDA ${{ matrix.cuda-version }}
      run: |
        cd sgl-kernel
        chmod +x ./build.sh
        ./build.sh "${{ matrix.python-version }}" "${{ matrix.cuda-version }}"

    - name: Upload to pypi
      working-directory: sgl-kernel
      run: |
        pip install twine
        python3 -m twine upload dist/* -u __token__ -p ${{ secrets.PYPI_TOKEN }}

    - name: Get package version
      id: get_version
      working-directory: sgl-kernel
      run: |
        VERSION=$(grep -o 'version = "[^"]*"' pyproject.toml | head -1 | cut -d'"' -f2)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Calculate SHA-256 hashes locally
      run: |
        python scripts/release/calculate_local_hashes.py sgl-kernel --version ${{ steps.get_version.outputs.version }} --dist-dir sgl-kernel/dist --output hash.txt
        
    - name: Extract SHA-256 hashes from PyPI as fallback
      if: failure()
      run: |
        pip install requests
        python scripts/release/extract_pypi_hashes.py sgl-kernel --version ${{ steps.get_version.outputs.version }} --output hash.txt --wait --max-wait-time 300

    - name: Upload hash.txt as artifact
      uses: actions/upload-artifact@v3
      with:
        name: sgl-kernel-hashes
        path: hash.txt
